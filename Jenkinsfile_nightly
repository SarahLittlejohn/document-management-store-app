#!groovy

properties([
    // H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
    pipelineTriggers([cron('H 05 * * *')]),
    parameters([
        booleanParam(
            name: 'RUN_MUTATION',
            defaultValue: true,
            description: 'Run pitest mutation tests (duration approx. 1 hour)'
        ),
        string(name: 'URL_TO_TEST', defaultValue: 'http://dm-store-aat.service.core-compute-aat.internal', description: 'The URL you want to run these tests against'),
        string(name: 'SecurityRules',
            defaultValue: 'http://raw.githubusercontent.com/hmcts/security-test-rules/master/conf/security-rules.conf',
            description: 'The URL you want to run these tests against'),

    ]),
])

@Library("Infrastructure")

def type = "java"
def product = "dm"
def component = "store"

def secrets = [
    's2s-${env}': [
        secret('microservicekey-em-gw', 'S2S_TOKEN')
    ],
    'dm-${env}': [
        secret('dm-store-storage-account-primary-connection-string', 'STORAGEACCOUNT_PRIMARY_CONNECTION_STRING')
    ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}

withNightlyPipeline(type, product, component) {
    env.IDAM_API_URL = "https://idam-api.aat.platform.hmcts.net"
    env.S2S_URL  = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
    env.TEST_URL = "http://dm-store-aat.service.core-compute-aat.internal"

    overrideVaultEnvironments(vaultOverrides)
    loadVaultSecrets(secrets)
    enableMutationTest()
    enableFullFunctionalTest()
    enableSecurityScan()
    enableSlackNotifications('#em-dev-chat')




    after('checkout') {
        echo '${product}-${component} out'
        sh '''
mkdir -p application/src/main/resources/META-INF
echo "allprojects { task printVersionInit { doLast { println project.version } } }" > init.gradle

tee application/src/main/resources/META-INF/build-info.properties <<EOF 2>/dev/null
build.version=$(./gradlew -q printVersion)
build.number=${BUILD_NUMBER}
build.commit=$(git rev-parse HEAD)
build.date=$(date)
EOF

'''
    }

}
